class node:
    def __init__(self,value):
        self.data=value
        self.next=None
class linkedlist:
    def __init__(self):
        self.head=None
        self.n=0
    def len(self):
        return self.n
    def insert_head(self,value):
        new_node=node(value)
        new_node.next =self.head
        self.head =new_node
        self.n=self.n+1
    def __str__(self):
        curr=self.head
        result=""
        while curr!=None:
            result= result+str(curr.data) + '->'
            curr=curr.next
        return result[:-2]
    def append (self,value):
        new_node=node(value)
        if self.head==None:
            self.head=new_node
            self.n=self.n+1
            return
        curr=self.head
        while curr.next != None:
            curr=curr.next
        curr.next=new_node
        self.n+=1
    def insert_mid (self,after,value):
        new_node=node(value)
        curr=self.head
        while curr!=None:
            if curr.data==after:
                break
            curr=curr.next
        if curr!=None:

            new_node.next = curr.next
            curr.next=new_node
        else:
            return'iteam not found'
    def clear(self):
        self.head=None
        self.n=0
    def delet_head(self):
        if self.head==None:
            return"empty list"
        self.head=self.head.next
        self.n=self.n-1
    def pop(self):
        if self.head==None:
            return"empty list"
        curr=self.head
        if curr.next ==None:
            return self.delet_head
        while curr.next.next!=None:
            curr=curr.next
        curr.next= None
        self.n=self.n-1

